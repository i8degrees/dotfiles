# 2010:jeffrey.carp@gmail.com
#
#		~/.tmux.conf
#
#		Tmux configuration defaults
#
# 	TODO:
#
#	a) write script to determine if tmux is being used in console or X11,
# 	then based on the resulting decision, respectively, choose either to use
# 	tmux internal buffer for copy & paste, or X11 clipboard buffer.
#
#	b) Use the tmux command display-message as indicators on our binded key
#	actions. Example: bind F5 \; run 'display-message "Reloading local config"' \;
#	...and so forth.
#
# 	Many thanks goes out to whomever that gave me the great ideas for tmux copy/paste:
# 	1. http://unix.stackexchange.com/questions/15715/getting-tmux-to-copy-a-buffer-to-the-clipboard/16405#16405
#

# new prefix key; ^X
unbind C-b
set -g prefix C-x
unbind x
bind x send-prefix

unbind n
bind n new-window

unbind &
unbind q
bind q kill-pane

unbind l
bind l previous-window
bind tab next-window

unbind %
unbind '"'
unbind |
bind | split-window -h
unbind -
bind - split-window -v

unbind r
bind r rotate-window

unbind :
bind enter command-prompt -p ":" %1
#unbind $
bind C-w command-prompt -p "(rename-window)" "rename-window %1"
unbind ,
bind C-s command-prompt -p "(rename-session)" "rename-session %1"

# TODO
# ZzzZZ; got lazy =O
#unbind M-w
#bind M-w command-prompt -I "(move-window -s source-window),(move-window -t target-window)" "move-window -s %1 -t %2"

# FIXME: appears to not call this binding? I must enter command mode and
# issue this request directly before I am able to test out a new
# configuration w/o shutting down the tmux server.
#unbind r
#bind r \; run "tmux display-message \"Reloading configuration\" \"; run "tmux source-file /home/jeff/.tmux.conf" \; run "tmux refresh-client" \; run "source ~/.bash_profile"

# copy (default?) buffer to OSX clipboard
#unbind [
#unbind c
#bind [ copy-mode \; run "tmux show-buffer | pbcopy"

# FIXME: this is a *TEMPORARY* solution to a minor problem -- it appears that
# even though I terminate the command immediately after copy-mode execution
# (which, in theory, ought to complete before...) tmux expects both copy-mode
# *AND* show-buffer / xclip pipe to return successful before considering this
# 2-3 layered executions just one mere loop.
unbind c
bind c run "tmux show-buffer | xclip -selection clip -i"

# x11 clipboard (copy) to tmux output (paste)
#unbind ]
#bind v run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

unbind v
bind v run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

#bind u capture-pane \; run "tmux paste-buffer | urlview"

unbind k
bind k run "tmux clear-history"

set -g status-bg green
set -g status-fg black
#set -g status-left "#[fg=green(echo $COLUMNS)]#S"
#set -g status-right "#[fg=green]#H"

setw -g mode-keys emacs
set -g display-time 4000
set -g visual-activity on
set -g default-shell /bin/bash
#set -g default-command 'reattach-to-user-namespace -l $SHELL'
# 256 colors
#set-option -s default-terminal "screen-256color-italic"
##set -g default-terminal 'screen-256color-italic'
set -g destroy-unattached on
set -g detach-on-destroy on
set -g exit-unattached off

#set -w -g window-status-current-bg red
set -w -g automatic-rename on
set -w -g monitor-activity on

#setw -g utf8 on
set -w -g xterm-keys on
#set -w -g mode-mouse on
set -w -g clock-mode-style 24
set -w -g clock-mode-colour red

set -g mouse on
#set -g mouse-select-window on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on

set -g history-limit 65536
set -g base-index 1
set -g set-titles on
set -g set-titles-string "[tmux]#S"

# fix vim escape delay
set -s escape-time 0

# set emacs keys
setw -g mode-keys emacs

# TODO
# set -g set-titles-string ""

# tmux plugins

if "test ! -d $HOME/.tmux/plugins/tpm" \
  run 'git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm &&
    $HOME/.tmux/plugins/tpm/bin/install_plugins'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-yank'

set -g @continuum-restore 'on'
# bin path; set system env
# tmuxinator new [project]
#set -g @plugin 'tmuxinator/tmuxinator'

#run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux
run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux

# IMPORTANT(jeff): This should always be at the very bottom of this
# config!
run-shell "$HOME/.tmux/plugins/tpm/tpm"
