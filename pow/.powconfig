# 2016-02/12:jeff
#
#   .powconfig
#
# SYNOPSIS: The default system environment for web apps that are hosted via
# Pow [1]. Changes made to this file will not be reflected until Pow has been
# restarted.
#
# IMPORTANT(jeff): Web applications that contain a .powconfig in their root
# dir -- as seen by Pow -- will have its environment overridden by the contents
# therein!
#
#   SEE ALSO
# 1. http://pow.cx/
# 2. https://github.com/37signals/pow/wiki/Running-Pow-with-Apache
#
#     ADDITIONAL NOTES
#   e1) The first time that the web application in question is visited, the
# web app is not running and must be cold booted. Once this initial visit has
# completed its response -- boot up and display -- to the end-user, it remains
# an active process until the number of seconds specified has elapsed.

#   e2) This number controls the number of commands being executed
# *concurrently* (in parallel). The number of threads should generally stay at
# or below the total number of threads available on a given host. Generally,
# the number that you use for spawning make during compilation can also be used
# here.
#   Now that we have all that said and out of the way -- this advice only
# applies when trying to **maximize** performance. My defaults intentionally
# lean toward minimal resource consumption and thus minimal CPU cycles spent on
# the web app. Performance-oriented web apps are expected to be tweaked with
# sensible numbers.

#   e3) The local environment to setup for Pow. Typically, for us, this will
# imply the usage of Ruby and friends for legacy sites, PHP and friends for
# ancient sites and node.JS and Co. for recent projects.

# Host serving options
# export POW_DST_PORT=88  # See note two (2)
export POW_DOMAINS=dev,local
export POW_EXT_DOMAINS=

# NOTE(jeff): Resource limits; performance tuning
export POW_TIMEOUT=60   # 1m [e1]
export POW_WORKERS=1    # Total number of job threads per app instance [e2]

# NOTE(jeff): Local site environment [e3]
RUBY_ENV="${HOME}/.rbenv/shims"
export PATH="${RUBY_ENV}:${PATH}"

